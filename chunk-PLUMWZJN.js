import{a as g}from"./chunk-NYX3SKFI.js";import{A as c,g as p,o as d}from"./chunk-WEB7ABMC.js";import"./chunk-LXJ7KHNF.js";import{Ga as a,Ra as s,ab as n,jb as t,kb as e,lb as o,zb as r}from"./chunk-TROVTPPJ.js";var b=class m{htmlCode=`
    <kage-progress-bar color="secondary"></kage-progress-bar>
    <kage-progress-bar color="danger" [value]="30" mode="determinate"></kage-progress-bar>
    <kage-progress-bar color="success" mode="buffer" [value]="20"></kage-progress-bar>
  `;tsCode=`
  import { Component } from '@angular/core';
  import { KageProgressBar } from 'kage-ui';
  ...

  @Component({
    selector: 'app-example',
    imports: [ KageProgressBar, ... ],
    templateUrl: '...',
    styleUrl: '...',
  })
  export class AppExampleComponent {}
  `;static \u0275fac=function(i){return new(i||m)};static \u0275cmp=s({type:m,selectors:[["app-progress-bar-preview"]],decls:65,vars:7,consts:[[1,"page-tag"],[1,"component"],[3,"iconDepth"],["label","Library",3,"href"],["label","Progress Bar",3,"href"],[1,"description"],[3,"htmlCode","tsCode"],["color","secondary"],["color","danger","mode","determinate",3,"value"],["color","success","mode","buffer",3,"value"],[1,"two-col-table"],[1,"two-col-table-head"],[1,"two-col-table-body"],[1,"each"]],template:function(i,l){i&1&&(t(0,"p",0)(1,"span",1),r(2,"Component"),e()(),t(3,"h1"),r(4,"Progress Bar"),e(),t(5,"kage-bread-crumbs",2),o(6,"kage-bread-crumb",3)(7,"kage-bread-crumb",4),e(),t(8,"p",5),r(9,"The Progress Bar component visually represents task progress in a linear format. It supports determinate and indeterminate modes, custom colors, and dynamic value updates."),e(),t(10,"app-code-preview",6),o(11,"kage-progress-bar",7)(12,"kage-progress-bar",8)(13,"kage-progress-bar",9),e(),t(14,"h3"),r(15,"Input"),e(),t(16,"p",5),r(17,"List of Input Parameters."),e(),t(18,"div",10)(19,"div",11)(20,"p"),r(21,"Name"),e(),t(22,"p"),r(23,"Default Value | Type"),e()(),t(24,"div",12)(25,"div",13)(26,"p"),r(27,"mode"),e(),t(28,"p"),r(29,"'determinate' | 'buffer' | 'indeterminate'. Default 'indeterminate'"),e()(),t(30,"div",13)(31,"p"),r(32,"value"),e(),t(33,"p"),r(34,"Type `number`. Default 0"),e()(),t(35,"div",13)(36,"p"),r(37,"color"),e(),t(38,"p"),r(39,"'primary' | 'secondary' | 'tertiary' | 'warning' | 'danger' | 'success' | 'info'. Default 'primary'"),e()()()(),t(40,"h3"),r(41,"Custom CSS Variables"),e(),t(42,"p",5),r(43,"Recommended CSS Variable List \u2014 Defining values using these variables is advised to enhance maintainability and optimize CSS performance."),e(),t(44,"div",10)(45,"div",11)(46,"p"),r(47,"Name"),e(),t(48,"p"),r(49,"Fallback Values"),e()(),t(50,"div",12)(51,"div",13)(52,"p"),r(53,"--kage-progress-bar-size"),e(),t(54,"p"),r(55,"3px"),e()(),t(56,"div",13)(57,"p"),r(58,"--kage-progress-bar-track-color"),e(),t(59,"p"),r(60,"transparent"),e()(),t(61,"div",13)(62,"p"),r(63,"--kage-progress-bar-thumb-color"),e(),o(64,"p"),e()()()),i&2&&(a(5),n("iconDepth",3),a(),n("href","/library"),a(),n("href","/library/progress-bar"),a(3),n("htmlCode",l.htmlCode)("tsCode",l.tsCode),a(2),n("value",30),a(),n("value",20))},dependencies:[g,p,d,c],styles:["h1[_ngcontent-%COMP%]{margin-bottom:10px}.description[_ngcontent-%COMP%]{color:var(--color-medium);margin:10px 0}h3[_ngcontent-%COMP%]{color:color-mix(in srgb,var(--color-dark) 80%,var(--color-light) 20%);margin:10px 0}app-code-preview[_ngcontent-%COMP%]   kage-progress-bar[_ngcontent-%COMP%]{margin-bottom:20px;display:block}"]})};export{b as ProgressBarPreviewComponent};
